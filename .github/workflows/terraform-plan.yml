name: 'Terraform Plan'

on:
  pull_request:
  push:
    branches:
      - main

env:
  TF_CLOUD_ORGANIZATION: "kanak"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "demo-go-pgsql-workflow"
  CONFIG_DIRECTORY: "./.terrarium-output"
  TERRARIUM_REPO: "cldcvr/terrarium"

jobs:
  terraform:
    if: github.repository != 'hashicorp-education/learn-terraform-github-actions'
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout Terrarium
        uses: actions/checkout@v3
        with:
          repository: ${{ env.TERRARIUM_REPO }}
          ref: shwetanshu/TER-89
          token: ${{ secrets.GH_TOKEN }}
          path: "./.terrarium-src"

      - uses: actions/setup-go@v4
        with:
          go-version: '^1.20' # The Go version to download (if necessary) and use.
      - run: go version

      - name: Terrarium Generate
        run: |
          cd ./.terrarium-src/src/cli && go mod edit -replace github.com/cldcvr/terrarium/src/pkg=../pkg && cd -
          cd ./.terrarium-src && make install && cd -
          terrarium generate -p .terrarium-src/examples/platform-demo/platform -a . -o .terrarium-output/src
          cp -r .terrarium-src/examples/platform-demo/modules ./.terrarium-output/modules

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: plan-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: plan-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
          plan_only: true

      - name: Get Plan Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
        id: plan-output
        with:
          plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}

      - name: Update PR
        if: github.ref != 'refs/heads/main'
        uses: actions/github-script@v6
        id: plan-comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Terraform Cloud Plan Output')
            });
            const output = `#### Terraform Cloud Plan Output
                \`\`\`
                Plan: ${{ steps.plan-output.outputs.add }} to add, ${{ steps.plan-output.outputs.change }} to change, ${{ steps.plan-output.outputs.destroy }} to destroy.
                \`\`\`
                
            [Terraform Cloud Plan](${{ steps.plan-run.outputs.run_link }})`;
            // 3. Delete previous comment so PR timeline makes sense
            if (botComment) {
              github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
              });
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Create Apply Run
        if: github.ref == 'refs/heads/main'
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: github.ref == 'refs/heads/main' && fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
